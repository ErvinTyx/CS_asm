.MODEL SMALL
.STACK 64
 PRINTSTRING MACRO STR
  MOV AH, 09H
  LEA DX,STR
  INT 21H
 ENDM
 INPUTBYTE MACRO
  MOV AH,01H
  INT 21H
 ENDM
 OUTPUTBYTE MACRO BYT
  MOV AH,02H
  MOV DL,BYT
  INT 21H
 ENDM
 NEWLINE macro
  MOV AH, 02H
  MOV DL, 0DH
  INT 21H
  MOV DL, 0AH
  INT 21h
 ENDM
 CLS MACRO
  MOV AX, 0600H
  MOV BH, 07H
  MOV CX, 0
  MOV DX, 174FH
  INT 10H
 ENDM

 FOURDGCAL MACRO D4 ;1234
  MOV AX,0 ;AX=0000
  MOV DX,0 ;DX=0000
 
  MOV AX,D4 ;AX=1234
  DIV HUNDRED ;AL=12 DL=34
  MOV Q1,AL ;Q1=12
  MOV R1,DL ;R1=34
 
  MOV AX,0
  MOV DX,0
  MOV AL,Q1 ;AL=12
  DIV TEN ;AL=01 AH=02
  MOV Q2,AL ;Q2=01
  MOV R2,AH ;R2=02
 
  MOV AX,0
  MOV DX,0
  MOV AL,R1 ;AL=34
  DIV TEN ;AL=03 AH=04
  MOV Q3,AL ;Q2=03
  MOV R3,AH ;R2=04
 ENDM 
.DATA
 MENU DB 13,10," ----------------------------"
      DB 13,10,"|  CODE  | FLAVOUR |  PRICE  |"
      DB 13,10,"|   D    | DURIAN  | RM 5.80 |"
      DB 13,10,"|   A    |  APPLE  | RM 4.00 |"
      DB 13,10,"|   O    | ORANGE  | RM 4.50 |"
      DB 13,10,"|   G    |  GRAPE  | RM 5.00 |"
      DB 13,10,"|   M    |  MANGO  | RM 4.50 |"
      DB 13,10, " ----------------------------$"
 MENUASK DB 13,10,13,10,"SELECT YOUR FLAVOUR (ENTER THE CODE): $"
 TAXPRICEMSG DB 13,10,"THE TAX PRICE IS : $"
 ARRAYOFPRICE DW 580,400,450,500,450
 PRICE DW 0
 QUANTITY DB 13,10,"ENTER QUANTITY (01-10): $"
 FLAVOURCODE DB 0
 QTY1 DB 0
 QTY2 DB 0
 ERROR DB 13,10,"INVALID CODE!$"
 QDERROR DB 13,10,"INVALID QUANTITY RANGE! (01-10)$"
 BOOL DB "F"
 TEN DB 10
 HUNDRED DW 100
 THOUSAND DW 1000
 TOTALQTY DB 0
 TOTAL DB 0
 R1 DB 0
 R2 DB 0
 R3 DB 0
 Q1 DB 0
 Q2 DB 0
 Q3 DB 0
 DISPLAYPRICE DB 13,10,"ITEM PRICE: RM $"
 TOTALPRICE DW 0
 TAX DB 8
 TR1 DW 0
 TR2 DB 0
 TR3 DB 0
 TR4 DB 0
 TQ1 DW 0
 TQ2 DB 0
 TQ3 DB 0
 TQ4 DB 0
 DTP DB 13,10,"TOTAL PRICE : RM$"
 TAXPRICE DW 0
 COSTICE DW 380,300,250,300,250
 SALESQTY DW 0,0,0,0,0 ;SUM TOGETHER TO COMPARE WHETHER GREATER THAN 1000 (REACH THE LIMIT OF 16 BITS CALCULATIONFOR PRICE *QTY)
 CTNPURCHASE DB 13,10,"DO YOU WANT TO CONTINUE PURCHASE ? (Y/N)$"
 CTNANSWER DB ?
 TENN DW 10
 CASH DW 0,0,0,0,0
 SEN DW 0,0,0,0,0
 CALCASH DW 0,0,0,0,0
 CALSEN DW 0,0,0,0,0
 S DB 0
 PRINTSR DB 13,10,"SALES REPORT:$"
 PRINTQD DB 13,10,"DURIAN ICE-CREAM SOLD: $"
 PRINTTD DB ", TOTAL INCOME OF DURIAN ICE-CREAM SOLD: RM$"
 PRINTQA DB 13,10,"APPLE ICE-CREAM SOLD: $"
 PRINTTA DB ", TOTAL INCOME OF APPLE ICE-CREAM SOLD: RM$"
 PRINTQO DB 13,10,"ORANGE ICE-CREAM SOLD: $"
 PRINTTO DB ", TOTAL PRICE OF ORANGE ICE-CREAM SOLD: RM$"
 PRINTQG DB 13,10,"GRAPE ICE-CREAM SOLD: $"
 PRINTTG DB ", TOTAL PRICE OF GRAPE ICE-CREAM SOLD: RM$"
 PRINTQM DB 13,10,"MANGO ICE-CREAM SOLD: $"
 PRINTTM DB ", TOTAL PRICE OF MANGO ICE-CREAM SOLD: RM$"
 PRINTTT DB 13,10,"TOTAL INCOME: RM$"
 CT1 DB 0
 CT2 DB 0
 CT3 DB 0
 CR1 DB 0
 CR2 DB 0
 CR3 DB 0
 RETURN_FLAG DB 0
.CODE
MAIN PROC
 MOV AX,@DATA
 MOV DS,AX

;--OUTPUT ICE-CREAM TYPES MENU
MENUOUTPUT:
 PRINTSTRING MENU

;--COMPARE TRUE FALSE STATEMENT FOR ERROR MESSAGE
 CMP BOOL,"T"
 JE ERRORMSG
 JNE MENU_ASK

;--DISPLAY ERROR MESSAGE
ERRORMSG:
 PRINTSTRING ERROR
 JMP MENU_ASK

MENU_ASK:
;--OUTPUT STRING FOR MENUASK
 PRINTSTRING MENUASK
 INPUTBYTE
 MOV FLAVOURCODE,AL
 JMP VALIDATION_FC; VALIDATION FOOD CODE
VALIDATION_FC:
;--COMPARE CODE
 CMP FLAVOURCODE,"D"
 JE DURIAN
 CMP FLAVOURCODE,"A"
 JE APPLE
 CMP FLAVOURCODE,"O"
 JE ORANGE
 CMP FLAVOURCODE,"G"
 JE GRAPE
 CMP FLAVOURCODE,"M"
 JE MANGO
 JNE INVALID

INVALID:
 MOV BOOL,"T"
 JMP MENUOUTPUT

DURIAN:
 MOV AX,ARRAYOFPRICE[0]
 MOV PRICE,AX
 JMP QTY

APPLE:
 MOV AX,ARRAYOFPRICE[2]
 MOV PRICE,AX
 JMP QTY

ORANGE:
 MOV AX,ARRAYOFPRICE[4]
 MOV PRICE,AX
 JMP QTY

GRAPE:
 MOV AX,ARRAYOFPRICE[6]
 MOV PRICE,AX
 JMP QTY

MANGO:
 MOV AX,ARRAYOFPRICE[8]
 MOV PRICE,AX
 JMP QTY


QERROR:
 PRINTSTRING QDERROR
 JMP QTY
QTY:
 ;--OUTPUT QUANTITY
 PRINTSTRING QUANTITY
;--ASK USER TO INPUT
 INPUTBYTE
 MOV QTY1,AL
;--ASK USER TO INPUT
 INPUTBYTE
 MOV QTY2,AL
 JMP QUANTITY_VALIDATION

QUANTITY_VALIDATION:
;--QUANTITY VALIDATION
 CMP QTY1,"0"
 JL QERROR
 CMP QTY1,"1"
 JG QERROR
 CMP QTY2,"0"
 JL QERROR
 CMP QTY2,"9"
 JG QERROR

 CALL CAL_QTY_UI
FOURDGCAL TOTALPRICE

;--9)CONVERT DEC TO HEX
 ADD Q2,30H
 ADD R2,30H
 ADD Q3,30H
 ADD R3,30H
 JMP DISPLAY_PRICE_UI

MENUOUTPUT_CONNECTION:
     JMP MENUOUTPUT
DISPLAY_PRICE_UI:
;--OUTPUT PRICE STRING
 PRINTSTRING DISPLAYPRICE

;--OUTPUT BYTE(Q2)
 OUTPUTBYTE Q2

;--OUTPUT BYTE(R2)
 OUTPUTBYTE R2

;--OUTPUT BYTE(".")
 OUTPUTBYTE "."

;--OUTPUT BYTE(Q3)
 OUTPUTBYTE Q3

;--OUTPUT BYTE(R3)
 OUTPUTBYTE R3

CALL CAL_TAXNTOTAL
 CMP RETURN_FLAG,1
 JE MENUOUTPUT_CONNECTION
 CMP RETURN_FLAG,2
 JE ENDPROGRAM;CHANGE

;--END PROGRAM
ENDPROGRAM:
 MOV AH,4CH
 INT 21H
MAIN ENDP
SALESREPORT PROC
;PRINT SALES REPORT----------------------------------------------------------------------------------------------------------------------------
 PRINTSTRING PRINTSR ;PRINT(SALES REPORT:)
;DURIAN-----------------------------------------------------------------------------
 ;PRINT(QUANTITY OF DURIAN ICE-CREAM SOLD:)
 PRINTSTRING PRINTQD
 ;TURN SALESQTY[0] INTO BYTE TO PRINT BYTES USING DIVISION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SALESQTY[0] ;AX=0088
 DIV HUNDRED ;AX=0000 DX=0088
 MOV CT1,AL ;CT1=00
 MOV CR1,DL ;CR1=88

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CT1 ;AL=00
 DIV TEN ;AL=00 AH=00
 MOV CT2,AL ;CT2=00
 MOV CR2,AH ;CR2=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CR1 ;AL=88
 DIV TEN ;AL=08 AH=08
 MOV CT3,AL ;CT3=08
 MOV CR3,AH ;CR3=08

;CONVERT QUANTITY FROM DEC TO HEX
 ADD CT2,30H
 ADD CR2,30H
 ADD CT3,30H
 ADD CR3,30H

 ;OUTPUT BYTE(QUANTITY)
 OUTPUTBYTE CT2 ;0
 OUTPUTBYTE CR2 ;0
 OUTPUTBYTE CT3 ;8
 OUTPUTBYTE CR3 ;8

;CALCULATION OF TOTAL PRICE OF DURIAN
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,ARRAYOFPRICE[0] ;AX=0580
 DIV HUNDRED ;AX=O005 DX=0080
 MOV CASH[0],AX ;CASH[0]=5
 MOV SEN[0],DX ;SEN[0]=80
 MOV AX,SALESQTY[0] ;AX=1000
 MUL CASH[0] ;AX=5*1000=5000
 MOV CALCASH[0],AX ;CALCASH[0]=5000

 ;-SEN CALCULATION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SEN[0] ;AX=0080
 DIV TEN ;AX=0008 DX=0000
 MOV SEN[0],AX ;SEN[0]=8
 MOV AX,SALESQTY[0] ;AX=1000
 MUL SEN[0] ;AX=8000
 MOV CALSEN[0],AX ;CALSEN[0]=8000
 DIV TENN ;AX=0800 DX=0000
 ADD AX,CALCASH[0] ;AX=800+5000=5800
 MOV CALCASH[0],AX ;CALCASH=[0]=5800
 MOV S,DL ;S1=0

 ;-SEPARATE VALUE IN BYTE
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,CALCASH[0] ;AX=5800
 DIV HUNDRED ; AX=0058 DX=0000
 MOV Q1,AL ;Q1=58
 MOV R1,DL ;R1=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,Q1 ;AL=58
 DIV TEN ;AL=05 AH=08
 MOV Q2,AL ;Q2=05
 MOV R2,AH ;R2=08

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,R1 ;AL=88
 DIV TEN ;AL=08 AH=08
 MOV Q3,AL ;Q3=08
 MOV R3,AH ;R3=08

 ;CONVERT DEC TO HEX
 ADD Q2,30H
 ADD R2,30H
 ADD Q3,30H
 ADD R3,30H
 ADD S,30H

 PRINTSTRING PRINTTD ;PRINT(, TOTAL PRICE OF DURIAN ICE-CREAM SOLD : RM)

 ;OUTPUT BYTE
 OUTPUTBYTE Q2
 OUTPUTBYTE R2
 OUTPUTBYTE Q3
 OUTPUTBYTE R3
 OUTPUTBYTE "."
 OUTPUTBYTE S
 OUTPUTBYTE "0"

;APPLE-----------------------------------------------------------------------------
PRINTSTRING PRINTQA ;PRINT(QUANTITY OF APPLE ICE-CREAM SOLD:)
 ;TURN SALESQTY[0] INTO BYTE TO PRINT BYTES USING DIVISION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SALESQTY[2] ;AX=0099
 DIV HUNDRED ;AX=0000 DX=0099
 MOV CT1,AL ;CT1=00
 MOV CR1,DL ;CR1=99

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CT1 ;AL=00
 DIV TEN ;AL=00 AH=00
 MOV CT2,AL ;CT2=00
 MOV CR2,AH ;CR2=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CR1 ;AL=99
 DIV TEN ;AL=09 AH=09
 MOV CT3,AL ;CT3=09
 MOV CR3,AH ;CR3=09

;CONVERT QUANTITY FROM DEC TO HEX
 ADD CT2,30H
 ADD CR2,30H
 ADD CT3,30H
 ADD CR3,30H

 ;OUTPUT BYTE(QUANTITY)
 OUTPUTBYTE CT2 ;CT2=0
 OUTPUTBYTE CR2 ;CR2=0
 OUTPUTBYTE CT3 ;CT3=9
 OUTPUTBYTE CR3 ;CR3=9

;CALCULATION OF TOTAL PRICE OF APPLE
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,ARRAYOFPRICE[2] ;AX=0400
 DIV HUNDRED ;AX=O004 DX=0000
 MOV CASH[2],AX ;CASH[0]=4
 MOV SEN[2],DX ;SEN[0]=00
 MOV AX,SALESQTY[2] ;AX=99
 MUL CASH[2] ;AX=99*4=396
 MOV CALCASH[2],AX ;CALCASH[0]=396

 ;-SEN CALCULATION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SEN[2] ;AX=0080
 DIV TEN ;AX=0008 DX=0000
 MOV SEN[2],AX ;SEN[0]=0
 MOV AX,SALESQTY[2] ;AX=1000
 MUL SEN[2] ;AX=0000
 MOV CALSEN[2],AX ;CALSEN[0]=0000
 DIV TENN ;AX=0000 DX=0000
 ADD AX,CALCASH[2] ;AX=000+0396=0396
 MOV CALCASH[2],AX ;CALCASH=[0]=0396
 MOV S,DL ;S1=0

 ;-SEPARATE VALUE IN BYTE
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,CALCASH[2] ;AX=0396
 DIV HUNDRED ; AX=0003 DX=0096
 MOV Q1,AL ;Q1=03
 MOV R1,DL ;R1=96

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,Q1 ;AL=03
 DIV TEN ;AL=03 AH=00
 MOV Q2,AL ;Q2=03
 MOV R2,AH ;R2=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,R1 ;AL=96
 DIV TEN ;AL=09 AH=06
 MOV Q3,AL ;Q3=09
 MOV R3,AH ;R3=06

 ;CONVERT DEC TO HEX
 ADD Q2,30H
 ADD R2,30H
 ADD Q3,30H
 ADD R3,30H
 ADD S,30H

 PRINTSTRING PRINTTA ;PRINT(, TOTAL PRICE OF APPLE ICE-CREAM SOLD : RM)

 ;OUTPUT BYTE
 OUTPUTBYTE Q2
 OUTPUTBYTE R2
 OUTPUTBYTE Q3
 OUTPUTBYTE R3
 OUTPUTBYTE "."
 OUTPUTBYTE S
 OUTPUTBYTE "0"

;ORANGE-----------------------------------------------------------------------------

PRINTSTRING PRINTQO ;PRINT(QUANTITY OF ORANGE ICE-CREAM SOLD:)
 ;TURN SALESQTY[0] INTO BYTE TO PRINT BYTES USING DIVISION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SALESQTY[4] ;AX=0888
 DIV HUNDRED ;AX=0008 DX=0088
 MOV CT1,AL ;CT1=08
 MOV CR1,DL ;CR1=88

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CT1 ;AL=08
 DIV TEN ;AL=08 AH=00
 MOV CT2,AL ;CT2=08
 MOV CR2,AH ;CR2=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CR1 ;AL=88
 DIV TEN ;AL=08 AH=08
 MOV CT3,AL ;CT3=08
 MOV CR3,AH ;CR3=08

;CONVERT QUANTITY FROM DEC TO HEX
 ADD CT2,30H
 ADD CR2,30H
 ADD CT3,30H
 ADD CR3,30H

 ;OUTPUT BYTE(QUANTITY)
 OUTPUTBYTE CT2 ;CT2=0
 OUTPUTBYTE CR2 ;CR2=8
 OUTPUTBYTE CT3 ;CT3=8
 OUTPUTBYTE CR3 ;CR3=8

;CALCULATION OF TOTAL PRICE OF ORANGE
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,ARRAYOFPRICE[4] ;AX=0450
 DIV HUNDRED ;AX=O004 DX=0050
 MOV CASH[4],AX ;CASH[0]=4
 MOV SEN[4],DX ;SEN[0]=50
 MOV AX,SALESQTY[4] ;AX=1000
 MUL CASH[4] ;AX=4*1000=4000
 MOV CALCASH[4],AX ;CALCASH[0]=4000

 ;-SEN CALCULATION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SEN[4] ;AX=0050
 DIV TEN ;AX=0005 DX=0000
 MOV SEN[4],AX ;SEN[0]=5
 MOV AX,SALESQTY[4] ;AX=1000
 MUL SEN[4] ;AX=5000
 MOV CALSEN[4],AX ;CALSEN[0]=8000
 DIV TENN ;AX=0500 DX=0000
 ADD AX,CALCASH[4] ;AX=500+5000=4500
 MOV CALCASH[4],AX ;CALCASH=[0]=4500
 MOV S,DL ;S1=0

 ;-SEPARATE VALUE IN BYTE
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,CALCASH[4] ;AX=4500
 DIV HUNDRED ; AX=0045 DX=0000
 MOV Q1,AL ;Q1=45
 MOV R1,DL ;R1=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,Q1 ;AL=45
 DIV TEN ;AL=04 AH=05
 MOV Q2,AL ;Q2=04
 MOV R2,AH ;R2=05

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,R1 ;AL=00
 DIV TEN ;AL=00 AH=00
 MOV Q3,AL ;Q3=00
 MOV R3,AH ;R3=00

 ;CONVERT DEC TO HEX
 ADD Q2,30H
 ADD R2,30H
 ADD Q3,30H
 ADD R3,30H
 ADD S,30H

 PRINTSTRING PRINTTO ;PRINT(, TOTAL PRICE OF ORANGE ICE-CREAM SOLD : RM)

 ;OUTPUT BYTE
 OUTPUTBYTE Q2
 OUTPUTBYTE R2
 OUTPUTBYTE Q3
 OUTPUTBYTE R3
 OUTPUTBYTE "."
 OUTPUTBYTE S
 OUTPUTBYTE "0"

;GRAPE-----------------------------------------------------------------------------

PRINTSTRING PRINTQG ;PRINT(QUANTITY OF GRAPE ICE-CREAM SOLD:)
 ;TURN SALESQTY[0] INTO BYTE TO PRINT BYTES USING DIVISION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SALESQTY[6] ;AX=0999
 DIV HUNDRED ;AX=0009 DX=0099
 MOV CT1,AL ;CT1=09
 MOV CR1,DL ;CR1=99

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CT1 ;AL=09
 DIV TEN ;AL=08 AH=00
 MOV CT2,AL ;CT2=09
 MOV CR2,AH ;CR2=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CR1 ;AL=99
 DIV TEN ;AL=09 AH=09
 MOV CT3,AL ;CT3=09
 MOV CR3,AH ;CR3=09

;CONVERT QUANTITY FROM DEC TO HEX
 ADD CT2,30H
 ADD CR2,30H
 ADD CT3,30H
 ADD CR3,30H

 ;OUTPUT BYTE(QUANTITY)
 OUTPUTBYTE CT2 ;CT2=0
 OUTPUTBYTE CR2 ;CR2=9
 OUTPUTBYTE CT3 ;CT3=9
 OUTPUTBYTE CR3 ;CR3=9

;CALCULATION OF TOTAL PRICE OF GRAPE
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,ARRAYOFPRICE[6] ;AX=0500
 DIV HUNDRED ;AX=O005 DX=0000
 MOV CASH[6],AX ;CASH[0]=5
 MOV SEN[6],DX ;SEN[0]=00
 MOV AX,SALESQTY[6] ;AX=1000
 MUL CASH[6] ;AX=5*1000=5000
 MOV CALCASH[6],AX ;CALCASH[0]=5000

 ;-SEN CALCULATION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SEN[6] ;AX=0000
 DIV TEN ;AX=0000 DX=0000
 MOV SEN[6],AX ;SEN[0]=0
 MOV AX,SALESQTY[6] ;AX=1000
 MUL SEN[6] ;AX=0000
 MOV CALSEN[6],AX ;CALSEN[0]=0000
 DIV TENN ;AX=0000 DX=0000
 ADD AX,CALCASH[6] ;AX=0000+5000=5000
 MOV CALCASH[6],AX ;CALCASH=[0]=5000
 MOV S,DL ;S1=0

 ;-SEPARATE VALUE IN BYTE
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,CALCASH[6] ;AX=5000
 DIV HUNDRED ; AX=0050 DX=0000
 MOV Q1,AL ;Q1=50
 MOV R1,DL ;R1=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,Q1 ;AL=50
 DIV TEN ;AL=05 AH=00
 MOV Q2,AL ;Q2=05
 MOV R2,AH ;R2=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,R1 ;AL=00
 DIV TEN ;AL=00 AH=00
 MOV Q3,AL ;Q3=00
 MOV R3,AH ;R3=00

 ;CONVERT DEC TO HEX
 ADD Q2,30H
 ADD R2,30H
 ADD Q3,30H
 ADD R3,30H
 ADD S,30H

 PRINTSTRING PRINTTG ;PRINT(, TOTAL PRICE OF GRAPE ICE-CREAM SOLD : RM)

 ;OUTPUT BYTE
 OUTPUTBYTE Q2
 OUTPUTBYTE R2
 OUTPUTBYTE Q3
 OUTPUTBYTE R3
 OUTPUTBYTE "."
 OUTPUTBYTE S
 OUTPUTBYTE "0"

;MANGO-----------------------------------------------------------------------------
PRINTSTRING PRINTQM ;PRINT(QUANTITY OF GRAPE ICE-CREAM SOLD:)
 ;TURN SALESQTY[0] INTO BYTE TO PRINT BYTES USING DIVISION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SALESQTY[8] ;AX=1000
 DIV HUNDRED ;AX=0010 DX=0000
 MOV CT1,AL ;CT1=10
 MOV CR1,DL ;CR1=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CT1 ;AL=10
 DIV TEN ;AL=08 AH=00
 MOV CT2,AL ;CT2=01
 MOV CR2,AH ;CR2=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,CR1 ;AL=00
 DIV TEN ;AL=00 AH=00
 MOV CT3,AL ;CT3=00
 MOV CR3,AH ;CR3=00

;CONVERT QUANTITY FROM DEC TO HEX
 ADD CT2,30H
 ADD CR2,30H
 ADD CT3,30H
 ADD CR3,30H

 ;OUTPUT BYTE(QUANTITY)
 OUTPUTBYTE CT2 ;CT2=1
 OUTPUTBYTE CR2 ;CR2=0
 OUTPUTBYTE CT3 ;CT3=0
 OUTPUTBYTE CR3 ;CR3=0

;CALCULATION OF TOTAL PRICE OF MANGO
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,ARRAYOFPRICE[8] ;AX=0450
 DIV HUNDRED ;AX=O004 DX=0050
 MOV CASH[8],AX ;CASH[0]=4
 MOV SEN[8],DX ;SEN[0]=50
 MOV AX,SALESQTY[8] ;AX=1000
 MUL CASH[8] ;AX=4*1000=4000
 MOV CALCASH[8],AX ;CALCASH[0]=4000

 ;-SEN CALCULATION
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,SEN[8] ;AX=0050
 DIV TEN ;AX=0005 DX=0000
 MOV SEN[8],AX ;SEN[0]=5
 MOV AX,SALESQTY[8] ;AX=1000
 MUL SEN[8] ;AX=5000
 MOV CALSEN[8],AX ;CALSEN[0]=5000
 DIV TENN ;AX=0500 DX=0000
 ADD AX,CALCASH[8] ;AX=0500+4000=4500
 MOV CALCASH[8],AX ;CALCASH=[0]=4500
 MOV S,DL ;S1=0

 ;-SEPARATE VALUE IN BYTE
 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AX,CALCASH[8] ;AX=4500
 DIV HUNDRED ; AX=0045 DX=0000
 MOV Q1,AL ;Q1=45
 MOV R1,DL ;R1=00

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,Q1 ;AL=45
 DIV TEN ;AL=04 AH=05
 MOV Q2,AL ;Q2=04
 MOV R2,AH ;R2=05

 MOV AX,0 ;AX=0000
 MOV DX,0 ;DX=0000
 MOV AL,R1 ;AL=00
 DIV TEN ;AL=00 AH=00
 MOV Q3,AL ;Q3=00
 MOV R3,AH ;R3=00

 ;CONVERT DEC TO HEX
 ADD Q2,30H
 ADD R2,30H
 ADD Q3,30H
 ADD R3,30H
 ADD S,30H

 PRINTSTRING PRINTTM ;PRINT(, TOTAL PRICE OF MANGO ICE-CREAM SOLD : RM)

 ;OUTPUT BYTE
 OUTPUTBYTE Q2
 OUTPUTBYTE R2
 OUTPUTBYTE Q3
 OUTPUTBYTE R3
 OUTPUTBYTE "."
 OUTPUTBYTE S
 OUTPUTBYTE "0"
 RET
SALESREPORT ENDP
CAL_QTY_UI PROC
;--CLEAR AX
 MOV AX,0
CALCULATION:
;--1)CONVERT HEX TO DEC
 SUB QTY1,30H ; QTY1 = 1
 SUB QTY2,30H; QYT2 = 0

;--2)MULTIPLY 10 WITH TEN-PLACE
 MOV AL,QTY1 ; AL = 1
 MUL TEN ; AL = 1 *10 = 10

;--3)MOVE TO REGISTER,THEN TEN-PLACE PLUS WITH ONE-PLACE,THEN MOVE BACK
 ADD AL,QTY2 ; ; AL = 10+ 0 = 10
 MOV TOTALQTY,AL ; TOTALQTY = AL = 10

;--4)MUTIPLY AS WITH PRICE AND STORE AX TO TOTALPRICE
 MUL PRICE
 MOV TOTALPRICE,AX

     RET
CAL_QTY_UI ENDP
CAL_TAXNTOTAL PROC
     MOV RETURN_FLAG,0
     ;--CALCULATE TAX PRICE
;--1)MOVE TOTALPRICE TO AX, CALCULATE THE TAX PRICE AND AUTOMATICALLY MOVE QUOTIENT TO AX AND REMAINDER TO DX
 MOV AX,0
 MOV DX,0
 MOV AL,TAX
 MUL TOTALPRICE
 MOV TAXPRICE,AX
 DIV THOUSAND
 MOV TQ1,AX ;46 41
 MOV TR1,DX ;400 760

 MOV AX,0
 MOV DX,0
 MOV AX,TQ1 ;46 41
 DIV TEN    ;04 04
 MOV TQ2,AL ;04 04 
 MOV TR2,AH ;06 01

 MOV AX,0
 MOV DX,0
 MOV AX,TR1 ;400 760
 DIV HUNDRED ;AL = 04 07
 MOV TQ3,AL ;AL = 04 07
 MOV TR3,DL ;DL = 00 60

 MOV AX,0
 MOV DX,0
 MOV AL,TR3 ;00 60
 DIV TEN    ;0 06
 MOV TQ4,AL ;0 06
 MOV TR4,AH ;0 00
 
;MOVE TQ3 TO BL TO COMPARE FOR ROUND UP
 MOV BL,TQ3

;--2)CONVERT DEC TO HEX
 ADD TQ2,30H
 ADD TQ3,30H
 ADD TQ4,30H
 ADD TR2,30H

;--3)OUTPUT TAX PRICE
 PRINTSTRING TAXPRICEMSG
 OUTPUTBYTE TQ2
 OUTPUTBYTE "."
 OUTPUTBYTE TR2
 OUTPUTBYTE TQ3
 OUTPUTBYTE TQ4
 
;--CHECK WHETHER HAVE VALUE SMALLER THAN 0.01, IF GREATER THAN OR EQUAL TO 5 PLUS 0.01
 MOV AX,0
 MOV DX,0
 CMP BL,5
 JL CALTOTAL
 MOV AX,TAXPRICE
 ADD AX,THOUSAND ;TYX SUBSTRACTION
 MOV TAXPRICE,AX

CALTOTAL: ;46400,5800
 MOV AX,0
 MOV DX,0
 MOV AX,TAXPRICE ;46400 41760
 DIV HUNDRED ;0464 0417
 ADD AX,TOTALPRICE ;AX=464+5800=6264 AX=417+5220
 MOV DX,0 ;---------------------------------TO BE CONTINUE
 DIV HUNDRED ; 62.64 5637
 MOV Q1,AL ;62 56
 MOV R1,DL ;64 37

;--7)MOVE Q1 TO AL, THEN DIV TEN,MOVE QUOTIENT AND REMAINDER RESPECTIVELY TO Q2 AND R2
 MOV AX,0
 MOV DX,0
 MOV AL,Q1 ;AL=62 56
 DIV TEN ;06 05
 MOV Q2,AL ;6 05
 MOV R2,AH ;2 06

;--8)MOVE Q2 TO AL,THEN DIV TEN, MOVE QUOTIENT AND REMAINDER RESPECTIVELY TO Q3 AND R3
 MOV AX,0
 MOV DX,0
 MOV AL,R1 ;AL=64
 DIV TEN ;6.4
 MOV Q3,AL ;6
 MOV R3,AH ;4

;--9)CONVERT DEC TO HEX
 ADD Q2,30H
 ADD R2,30H
 ADD Q3,30H
 ADD R3,30H

;--OUTPUT TOTAL PRICE
 PRINTSTRING DTP

 ;--OUTPUT BYTE(Q2)
 OUTPUTBYTE Q2

;--OUTPUT BYTE(R2)
 OUTPUTBYTE R2

;--OUTPUT BYTE(".")
 OUTPUTBYTE "."

;--OUTPUT BYTE(Q3)
 OUTPUTBYTE Q3

 ;OUTPUTBYTE R3
 OUTPUTBYTE "0"

 ;COMPARE FLAVOUR CODE TO ADD QUANTITY FOR SALES REPORT
 MOV AX,0
 CMP FLAVOURCODE,"D"
 JE ADDQTYD
 CMP FLAVOURCODE,"A"
 JE ADDQTYA
 CMP FLAVOURCODE,"O"
 JE ADDQTYO
 CMP FLAVOURCODE,"G"
 JE ADDQTYG
 CMP FLAVOURCODE,"M"
 JE ADDQTYM

;ADD QUANTITY TO SALES QUANTITY FOR SALES REPORT DISPLAY PURPOSE
ADDQTYD:
 MOV AL,TOTALQTY
 ADD SALESQTY[0],AX
 JMP CTNP
ADDQTYA:
 MOV AL,TOTALQTY
 ADD SALESQTY[1],AX
 JMP CTNP
ADDQTYO:
 MOV AL,TOTALQTY
 ADD SALESQTY[2],AX
 JMP CTNP
ADDQTYG:
 MOV AL,TOTALQTY
 ADD SALESQTY[3],AX
 JMP CTNP
ADDQTYM:
 MOV AL,TOTALQTY
 ADD SALESQTY[4],AX
 JMP CTNP

;OUTPUT INVALID MESSAGE
ERRORYN:
 PRINTSTRING ERROR

;ASK FOR WHETHER CONTINUE PURCHASE
CTNP:
 ;OUTPUT CONTINUE PURCHASE 
 PRINTSTRING CTNPURCHASE
 INPUTBYTE
 MOV CTNANSWER,AL
 CMP CTNANSWER,"Y"
 JE CONTINUE_TO_MENU
 CMP CTNANSWER,"N"
 JE EXIT2_LOGIN_PAGE;--- CHANGE TO LOGIN
 JNE ERRORYN
 CONTINUE_TO_MENU:
     MOV RETURN_FLAG,1
     JMP END_CAL_TAXNTOTAL 
 EXIT2_LOGIN_PAGE:
     MOV RETURN_FLAG,2
     JMP END_CAL_TAXNTOTAL
 END_CAL_TAXNTOTAL:
     RET
CAL_TAXNTOTAL ENDP
 END MAIN